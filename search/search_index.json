{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Sobre o Projeto MyEvents \ud83d\udcbb Pr\u00e9-requisitos Antes de come\u00e7ar, verifique se voc\u00ea atendeu aos seguintes requisitos: Voc\u00ea instalou a vers\u00e3o mais recente de <npm / v8.x+> e <Node/ v14 lts> Como Utilizar Localmente Para rodar na sua m\u00e1quina, baixe o reposit\u00f3rio em sua m\u00e1quina local e abra seu console no diret\u00f3rio onde est\u00e1 localizado o projeto. Ap\u00f3s isso digite: npm install para instalar as depend\u00eancias do projeto E Para rodar o projeto localmente: npm run dev Tecnologias Utilizadas Dev Site Pensado em Componentes Header Button Card Gerenciamento de Rotas Qualquer tentativa de acesso para uma rota inexistente leva a pagina de Error Componente para gerenciamento de rotas ``` import React from \"react\"; import { Route, Routes } from \"react-router-dom\"; import Home from \"../Screens/Home/Home\"; import Events from \"../Screens/Events/Events\"; import { Error } from \"../Screens/Error/Error\"; import { Login } from \"../Screens/Login/Login\"; export function Rts() { return( } path=\"/\" /> } path=\"/events\" /> } path=\"/login\" /> } path=\"*\" /> ) } ``` Uso de Hooks useEffect para o efeito de transi\u00e7\u00f5es de imagem na p\u00e1gina inicial import { useEffect, useState } from 'react' import Img1 from '../../Assets/Images/img1.jpg' import Img2 from '../../Assets/Images/img2.jpg' import Img3 from '../../Assets/Images/img3.jpg' import Img4 from '../../Assets/Images/img4.jpg' let i = 0 export function Home(){ const imgs = [Img1, Img2, Img3, Img4] // pode ser o retorno de um objeto JSON de uma api const [imgSrc , setImgSrc] = useState(imgs[0]) useEffect(() =>{ setTimeout(() =>{ if(i === imgs.length + 1){ i = 0 setImgSrc(imgs[i]); i++; }else{ setImgSrc(imgs[i]); i++; } }, 5000) }, [imgSrc]) return( <img src={imgSrc} /> ) } useState para manipular estados, menu mobile, filtro de busca por cidade e data export function Header(){ const [showMenu, setShowMenu] = useState(false) let menuMobile if(showMenu){ menuMobile = <div className={styles.menuMobile}> <XCircle size={32} color=\"white\" onClick={() => setShowMenu(false)}/> <nav className={styles.navMobile}> <Link to=\"/\" onClick={() => setShowMenu(false)}>In\u00edcio</Link> <Link to=\"/events\" onClick={() => setShowMenu(false)}>Eventos</Link> <Link to=\"/login\" onClick={() => setShowMenu(false)}>Login</Link> </nav> </div> } } return( <header className={styles.header}> <h1 className ={styles.logo}> <Link to = \"/\">MyEvents</Link> </h1> <div> <List size={32} onClick={() => setShowMenu(!showMenu)}/> <nav className={styles.nav}> <Link to=\"/\">In\u00edcio</Link> <Link to=\"/events\">Eventos</Link> <Link to=\"/login\">Login</Link> </nav> </div> {menuMobile} </header> ) } useLocation para renderizar a barra de busca somente na rota \"/events\", definir o conte\u00fado dos componentes Button e Card em rela\u00e7\u00e3o a rota export function Card({title, imgSrc, description, city , date}){ const location = useLocation() return( <> <div className={styles.card}> {title && <h1 className={styles.title}>{title}</h1> || imgSrc && <img src={imgSrc} className={styles.img}/> || city && <> <h1 className={styles.title}>{city}</h1> <time>{date}</time> </> } <p>{description}</p> {location.pathname !== '/events' ? <Button content={\"crie seu evento\"}/> : <Button content={\"inscrever\"}/>} </div> </> ) } Barra de Busca Responsividade Considera\u00e7\u00f5es Finais Vejo que poderia ter feito mais coisas como um layout melhor, um sistema de login com autentica\u00e7\u00e3o por email, consumo de api da Sympla para pegar eventos reais. Foi bem trabalhoso conciliar o tempo , pois estava tendo uma semana de diversas provas na faculdade e entregas de trabalho e perdi bastante tempo com uma proposta de design, vejo que ainda me falta um leque de conhecimento com prototipa\u00e7\u00e3o de interfaces, UX, UI. Deixo tais coisas como a incrementar, pois vejo que n\u00e3o seria dificil as implementa\u00e7\u00f5es restantes com Axios e Context API","title":"In\u00edcio"},{"location":"#sobre-o-projeto","text":"","title":"Sobre o Projeto"},{"location":"#pre-requisitos","text":"Antes de come\u00e7ar, verifique se voc\u00ea atendeu aos seguintes requisitos: Voc\u00ea instalou a vers\u00e3o mais recente de <npm / v8.x+> e <Node/ v14 lts>","title":"\ud83d\udcbb Pr\u00e9-requisitos"},{"location":"#como-utilizar-localmente","text":"Para rodar na sua m\u00e1quina, baixe o reposit\u00f3rio em sua m\u00e1quina local e abra seu console no diret\u00f3rio onde est\u00e1 localizado o projeto. Ap\u00f3s isso digite: npm install para instalar as depend\u00eancias do projeto E Para rodar o projeto localmente: npm run dev","title":"Como Utilizar Localmente"},{"location":"#tecnologias-utilizadas","text":"","title":"Tecnologias Utilizadas"},{"location":"#dev","text":"","title":"Dev"},{"location":"#site-pensado-em-componentes","text":"Header Button Card","title":"Site Pensado em Componentes"},{"location":"#gerenciamento-de-rotas","text":"Qualquer tentativa de acesso para uma rota inexistente leva a pagina de Error Componente para gerenciamento de rotas ``` import React from \"react\"; import { Route, Routes } from \"react-router-dom\"; import Home from \"../Screens/Home/Home\"; import Events from \"../Screens/Events/Events\"; import { Error } from \"../Screens/Error/Error\"; import { Login } from \"../Screens/Login/Login\"; export function Rts() { return( } path=\"/\" /> } path=\"/events\" /> } path=\"/login\" /> } path=\"*\" /> ) } ```","title":"Gerenciamento de Rotas"},{"location":"#uso-de-hooks","text":"useEffect para o efeito de transi\u00e7\u00f5es de imagem na p\u00e1gina inicial import { useEffect, useState } from 'react' import Img1 from '../../Assets/Images/img1.jpg' import Img2 from '../../Assets/Images/img2.jpg' import Img3 from '../../Assets/Images/img3.jpg' import Img4 from '../../Assets/Images/img4.jpg' let i = 0 export function Home(){ const imgs = [Img1, Img2, Img3, Img4] // pode ser o retorno de um objeto JSON de uma api const [imgSrc , setImgSrc] = useState(imgs[0]) useEffect(() =>{ setTimeout(() =>{ if(i === imgs.length + 1){ i = 0 setImgSrc(imgs[i]); i++; }else{ setImgSrc(imgs[i]); i++; } }, 5000) }, [imgSrc]) return( <img src={imgSrc} /> ) } useState para manipular estados, menu mobile, filtro de busca por cidade e data export function Header(){ const [showMenu, setShowMenu] = useState(false) let menuMobile if(showMenu){ menuMobile = <div className={styles.menuMobile}> <XCircle size={32} color=\"white\" onClick={() => setShowMenu(false)}/> <nav className={styles.navMobile}> <Link to=\"/\" onClick={() => setShowMenu(false)}>In\u00edcio</Link> <Link to=\"/events\" onClick={() => setShowMenu(false)}>Eventos</Link> <Link to=\"/login\" onClick={() => setShowMenu(false)}>Login</Link> </nav> </div> } } return( <header className={styles.header}> <h1 className ={styles.logo}> <Link to = \"/\">MyEvents</Link> </h1> <div> <List size={32} onClick={() => setShowMenu(!showMenu)}/> <nav className={styles.nav}> <Link to=\"/\">In\u00edcio</Link> <Link to=\"/events\">Eventos</Link> <Link to=\"/login\">Login</Link> </nav> </div> {menuMobile} </header> ) } useLocation para renderizar a barra de busca somente na rota \"/events\", definir o conte\u00fado dos componentes Button e Card em rela\u00e7\u00e3o a rota export function Card({title, imgSrc, description, city , date}){ const location = useLocation() return( <> <div className={styles.card}> {title && <h1 className={styles.title}>{title}</h1> || imgSrc && <img src={imgSrc} className={styles.img}/> || city && <> <h1 className={styles.title}>{city}</h1> <time>{date}</time> </> } <p>{description}</p> {location.pathname !== '/events' ? <Button content={\"crie seu evento\"}/> : <Button content={\"inscrever\"}/>} </div> </> ) }","title":"Uso de Hooks"},{"location":"#barra-de-busca","text":"","title":"Barra de Busca"},{"location":"#responsividade","text":"","title":"Responsividade"},{"location":"#consideracoes-finais","text":"Vejo que poderia ter feito mais coisas como um layout melhor, um sistema de login com autentica\u00e7\u00e3o por email, consumo de api da Sympla para pegar eventos reais. Foi bem trabalhoso conciliar o tempo , pois estava tendo uma semana de diversas provas na faculdade e entregas de trabalho e perdi bastante tempo com uma proposta de design, vejo que ainda me falta um leque de conhecimento com prototipa\u00e7\u00e3o de interfaces, UX, UI. Deixo tais coisas como a incrementar, pois vejo que n\u00e3o seria dificil as implementa\u00e7\u00f5es restantes com Axios e Context API","title":"Considera\u00e7\u00f5es Finais"}]}